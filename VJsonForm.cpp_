#include "VJsonForm.h"

VJsonForm::VJsonForm( QWidget *parent /* = NULL */ ) : QTreeWidget( parent )
{
	this->setColumnCount( 2 );
	this->setHeaderLabels( QStringList( "Key" ) << "Value" );

	QJsonObject obj = CJsonTemplate::get()->createTree( "shader" , true );
	generateChildren( this->invisibleRootItem() , obj );
}

VJsonForm::~VJsonForm()
{
	//
}

void VJsonForm::generateChildren( QTreeWidgetItem *parent , QJsonObject &object )
{
	if( parent )
	{
		QStringList keys = object.keys();

		for( int keyIndex = 0 ; keyIndex < keys.length() ; keyIndex++ )
		{
			QJsonValue value = object.value( keys.at( keyIndex ) );

			if( value.isArray() )
			{
				//std::cout << keys.at( keyIndex ).toLatin1().data() << " array" << std::endl;

				QJsonArray array = value.toArray();
				QTreeWidgetItem *arrayItem = new QTreeWidgetItem( parent );
				arrayItem->setText( 0 , keys.at( keyIndex ) );

				std::cout << array.count() << std::endl;

				// If base type, simple array
				for( int itemIndex = 0 ; itemIndex < array.count() ; itemIndex++ )
				{
					QJsonValue value = array.at( itemIndex );

					if( value.isArray() )
					{
						QTreeWidgetItem *item = new QTreeWidgetItem( arrayItem );
						item->setText( 0 , keys.at( keyIndex ) );

						QJsonArray array = value.toArray();

						for( int index = 0 ; index < array.count() ; index++ )
						{
							QJsonValue val = array.at( index );

							if( value.isBool() )
							{
								QTreeWidgetItem *item = new QTreeWidgetItem( parent );
								item->setText( 0 , keys.at( keyIndex ) );
								item->setText( 1 , value.toBool() ? "true" : "false" );
							}
							else if( value.isDouble() )
							{
								QTreeWidgetItem *item = new QTreeWidgetItem( parent );
								item->setText( 0 , keys.at( keyIndex ) );
								item->setText( 1 , QString( "%1" ).arg( value.toDouble() ) );
							}
							else if( value.isString() )
							{
								QTreeWidgetItem *item = new QTreeWidgetItem( parent );
								item->setText( 0 , keys.at( keyIndex ) );
								item->setText( 1 , value.toString() );
							}
						}
					}
					else if( value.isObject() )
					{
						QTreeWidgetItem *item = new QTreeWidgetItem( arrayItem );
						item->setText( 0 , QString( "[%1]" ).arg( itemIndex ) );

						QJsonObject object = value.toObject();
						generateChildren( item , object );
					}
					else if( value.isString() )
					{
						QTreeWidgetItem *item = new QTreeWidgetItem( arrayItem );
						item->setText( 0 , QString( "[%1]" ).arg( itemIndex ) );
						item->setText( 1 , QString( "%1" ).arg( value.toString() ) );
					}
				}
			}
			else if( value.isBool() )
			{
				QTreeWidgetItem *item = new QTreeWidgetItem( parent );
				item->setText( 0 , keys.at( keyIndex ) );
				item->setText( 1 , value.toBool() ? "true" : "false" );
			}
			else if( value.isDouble() )
			{
				QTreeWidgetItem *item = new QTreeWidgetItem( parent );
				item->setText( 0 , keys.at( keyIndex ) );
				item->setText( 1 , QString( "%1" ).arg( value.toDouble() ) );
			}
#if 0
			else if( value.isInt() )
			{
				QTreeWidgetItem *item = new QTreeWidgetItem( parent );
				item->setText( 0 , keys.at( keyIndex ) );
				item->setText( 1 , QString( "%1" ).arg( value.toInt() ) );
			}
#endif
			else if( value.isObject() )
			{
				QJsonObject object = value.toObject();
				generateChildren( parent , object );
			}
			else if( value.isString() )
			{
				QTreeWidgetItem *item = new QTreeWidgetItem( parent );
				item->setText( 0 , keys.at( keyIndex ) );
				item->setText( 1 , value.toString() );
			}
		}
	}
}
